std::logic_error
Assertion failed: !y.contains(0); y: [ -2, 5]; const asol::interval asol::operator/(const asol::interval&, const asol::interval&) at ../interval.cpp:132
###############################################
Box generator tests
testing invalid arguments: Assertion failed: index_set.size()>0, asol::box_generator::box_generator(std::vector<asol::interval, std::allocator<asol::interval> >&, const std::vector<int, std::allocator<int> >&, int) at ../box_generator.cpp:38
testing invalid arguments: Assertion failed: equal_parts>=2; minimum 2 parts should be generated, asked for 1; asol::box_generator::box_generator(std::vector<asol::interval, std::allocator<asol::interval> >&, const std::vector<int, std::allocator<int> >&, int) at ../box_generator.cpp:37
testing invalid arguments: Assertion failed: equal_parts>=2; minimum 2 parts should be generated, asked for 0; asol::box_generator::box_generator(std::vector<asol::interval, std::allocator<asol::interval> >&, const std::vector<int, std::allocator<int> >&, int) at ../box_generator.cpp:37
number of variables: 1, equal parts: 2, subboxes: 2
number of variables: 1, equal parts: 3, subboxes: 3
number of variables: 1, equal parts: 4, subboxes: 4
number of variables: 2, equal parts: 2, subboxes: 4
number of variables: 2, equal parts: 3, subboxes: 9
number of variables: 2, equal parts: 4, subboxes: 16
number of variables: 3, equal parts: 2, subboxes: 8
number of variables: 3, equal parts: 3, subboxes: 27
number of variables: 3, equal parts: 4, subboxes: 64
number of variables: 4, equal parts: 2, subboxes: 16
number of variables: 4, equal parts: 3, subboxes: 81
number of variables: 4, equal parts: 4, subboxes: 256
###############################################
Jacobsen sparsity
0	21	
15	21	22	
8	15	21	
0	8	15	21	48	
7	15	22	
15	54	
6	7	22	54	
6	7	48	54	
9	15	87	
0	1	9	22	87	
0	1	9	48	87	
14	15	120	
5	6	14	22	120	
5	6	14	48	120	
10	15	151	
1	2	10	22	151	
1	2	10	48	151	
13	15	184	
4	5	13	22	184	
4	5	13	48	184	
11	15	215	
2	3	11	22	215	
2	3	11	48	215	
12	15	246	
3	4	12	22	246	
3	4	12	48	246	
###############################################
Hansen's example
==============================
Number of variables:   2
Max used index (args): 15
Common subexpressions: 1
Number of constraints: 1
Number of primitives:  13
Numeric constants:     3
==============================
Primitives in plain text format

0: v2 = v0 * v1
1: CSE: v2 (0)

2: v3 = sqr(v0)
3: v4 = v3 + v1
4: v5 = v4 + v2
5: v7 = n6 * v2
6: v8 = sqr(v1)
7: v10 = n9 * v8
8: v12 = n11 * v0
9: v13 = v12 - v10
10: v14 = v13 + v7
11: v15 = v14 / v5
12: Eq: v15 = rhs(0)

Type 1 common subexpressions:
Type 2 common subexpressions:
2
Type 3 common subexpressions:
0: [ 1, 5.25321]
1: [ 1, 9.96378]
Last value: [ 14.5, 14.5]
###############################################
Neumaier's interval challange
==============================
Number of variables:   7
Max used index (args): 28
Common subexpressions: 2
Number of constraints: 1
Number of primitives:  24
Numeric constants:     1
==============================
Primitives in plain text format

0: v7 = sqr(v1)
1: v8 = sqr(v0)
2: v9 = v8 + v7
3: CSE: v9 (0)

4: v10 = sqr(v3)
5: v11 = sqr(v2)
6: v12 = v11 + v10
7: CSE: v12 (1)

8: v13 = v0 * v2
9: v14 = v1 * v3
10: v15 = v14 + v13
11: v16 = v5 * v15
12: v17 = v0 * v3
13: v18 = v1 * v2
14: v19 = v18 - v17
15: v20 = v4 * v19
16: v21 = v20 + v16
17: v22 = v9 + v12
18: v24 = n23 * v21
19: v25 = v9 - v12
20: v26 = v6 * v25
21: v27 = v26 + v24
22: v28 = v27 / v22
23: Eq: v28 = rhs(0)

Type 1 common subexpressions:
Type 2 common subexpressions:
9
12
Type 3 common subexpressions:
0: [ -0.888808, -0.6]
1: [ -0.1, 0.2]
2: [ 0.3, 0.7]
3: [ -0.2, 0.1]
4: [ -1, 1]
5: [ -1, 1]
6: [ 7, 9]
Last value: [ 0, 0]
###############################################
(x-1)/(x^2+2)
==============================
Number of variables:   1
Max used index (args): 6
Common subexpressions: 0
Number of constraints: 0
Number of primitives:  4
Numeric constants:     2
==============================
Primitives in plain text format

0: v1 = sqr(v0)
1: v3 = v1 + n2
2: v5 = v0 + n4
3: v6 = v5 / v3
Type 1 common subexpressions:
Type 2 common subexpressions:
Type 3 common subexpressions:
0: [ 2, 4]
Last value: [ 0.0555556, 0.5]
###############################################
(x^2+x)/(16*x-9)
==============================
Number of variables:   1
Max used index (args): 7
Common subexpressions: 0
Number of constraints: 0
Number of primitives:  5
Numeric constants:     2
==============================
Primitives in plain text format

0: v2 = n1 * v0
1: v4 = v2 + n3
2: v5 = sqr(v0)
3: v6 = v5 + v0
4: v7 = v6 / v4
Type 1 common subexpressions:
Type 2 common subexpressions:
Type 3 common subexpressions:
0: [ 1, 2]
Last value: [ 0.0869565, 0.857143]
###############################################
x^2+y^2=1
x^2-y  =0
==============================
Number of variables:   2
Max used index (args): 5
Common subexpressions: 1
Number of constraints: 2
Number of primitives:  7
Numeric constants:     0
==============================
Primitives in plain text format

0: v2 = sqr(v0)
1: CSE: v2 (0)

2: v3 = sqr(v1)
3: v4 = v2 + v3
4: Eq: v4 = rhs(0)

5: v5 = v2 - v1
6: Eq: v5 = rhs(1)

Type 1 common subexpressions:
Type 2 common subexpressions:
2
Type 3 common subexpressions:
0: [ -0.78617, -0.786128]
1: [ 0.61801, 0.618064]
Last value: [ 0, 0]
###############################################
Jacobsen
==============================
Number of variables:   16
Max used index (args): 276
Common subexpressions: 10
Number of constraints: 16
Number of primitives:  207
Numeric constants:     80
==============================
Primitives in plain text format

0: v17 = n16 / v0
1: v19 = v17 + n18
2: v21 = n20 / v19
3: CSE: v21 (0)

4: v22 = v15 * v21
5: CSE: v22 (1)

6: v24 = n23 * v21
7: v26 = n25 - v24
8: v27 = v8 - v15
9: v28 = v27 * v26
10: Eq: v28 = rhs(0)

11: v30 = n29 * v0
12: v31 = exp(v30)
13: v33 = n32 * v31
14: v35 = n34 * v0
15: v36 = exp(v35)
16: v38 = n37 * v36
17: v39 = v38 + v33
18: v41 = n40 * v21
19: v42 = exp(v41)
20: v44 = n43 * v42
21: v45 = v15 * v44
22: v46 = v39 - v44
23: v47 = v8 * v46
24: v48 = v47 + v45
25: CSE: v48 (2)

26: v50 = n49 - v15
27: v51 = v50 * v7
28: v52 = v51 + v22
29: Eq: v52 = rhs(1)

30: v54 = n53 - v15
31: CSE: v54 (3)

32: v56 = n55 / v7
33: v58 = v56 + n57
34: v60 = n59 / v58
35: v61 = v54 * v6
36: v63 = n62 * v60
37: v64 = v63 - v61
38: v65 = v64 - v22
39: Eq: v65 = rhs(2)

40: v67 = n66 * v7
41: v68 = exp(v67)
42: v70 = n69 * v68
43: v72 = n71 * v7
44: v73 = exp(v72)
45: v75 = n74 * v73
46: v76 = v75 + v70
47: v78 = n77 * v6
48: v79 = exp(v78)
49: v81 = n80 * v79
50: v82 = v54 * v81
51: v84 = n83 * v76
52: v85 = v84 - v82
53: v86 = v85 - v48
54: Eq: v86 = rhs(3)

55: v87 = v9 - v15
56: CSE: v87 (4)

57: v89 = n88 / v1
58: v91 = v89 + n90
59: v93 = n92 / v91
60: v94 = v87 * v0
61: v95 = v9 * v93
62: v96 = v95 - v94
63: v97 = v96 - v22
64: Eq: v97 = rhs(4)

65: v99 = n98 * v1
66: v100 = exp(v99)
67: v102 = n101 * v100
68: v104 = n103 * v1
69: v105 = exp(v104)
70: v107 = n106 * v105
71: v108 = v107 + v102
72: v110 = n109 * v0
73: v111 = exp(v110)
74: v113 = n112 * v111
75: v114 = v87 * v113
76: v115 = v9 * v108
77: v116 = v115 - v114
78: v117 = v116 - v48
79: Eq: v117 = rhs(5)

80: v119 = v14 + n118
81: v120 = v119 - v15
82: CSE: v120 (5)

83: v122 = n121 / v6
84: v124 = v122 + n123
85: v126 = n125 / v124
86: v127 = v120 * v5
87: v128 = v14 * v126
88: v129 = v128 - v127
89: v130 = v129 - v22
90: Eq: v130 = rhs(6)

91: v132 = n131 * v6
92: v133 = exp(v132)
93: v135 = n134 * v133
94: v137 = n136 * v6
95: v138 = exp(v137)
96: v140 = n139 * v138
97: v141 = v140 + v135
98: v143 = n142 * v5
99: v144 = exp(v143)
100: v146 = n145 * v144
101: v147 = v120 * v146
102: v148 = v14 * v141
103: v149 = v148 - v147
104: v150 = v149 - v48
105: Eq: v150 = rhs(7)

106: v151 = v10 - v15
107: CSE: v151 (6)

108: v153 = n152 / v2
109: v155 = v153 + n154
110: v157 = n156 / v155
111: v158 = v151 * v1
112: v159 = v10 * v157
113: v160 = v159 - v158
114: v161 = v160 - v22
115: Eq: v161 = rhs(8)

116: v163 = n162 * v2
117: v164 = exp(v163)
118: v166 = n165 * v164
119: v168 = n167 * v2
120: v169 = exp(v168)
121: v171 = n170 * v169
122: v172 = v171 + v166
123: v174 = n173 * v1
124: v175 = exp(v174)
125: v177 = n176 * v175
126: v178 = v151 * v177
127: v179 = v10 * v172
128: v180 = v179 - v178
129: v181 = v180 - v48
130: Eq: v181 = rhs(9)

131: v183 = v13 + n182
132: v184 = v183 - v15
133: CSE: v184 (7)

134: v186 = n185 / v5
135: v188 = v186 + n187
136: v190 = n189 / v188
137: v191 = v184 * v4
138: v192 = v13 * v190
139: v193 = v192 - v191
140: v194 = v193 - v22
141: Eq: v194 = rhs(10)

142: v196 = n195 * v5
143: v197 = exp(v196)
144: v199 = n198 * v197
145: v201 = n200 * v5
146: v202 = exp(v201)
147: v204 = n203 * v202
148: v205 = v204 + v199
149: v207 = n206 * v4
150: v208 = exp(v207)
151: v210 = n209 * v208
152: v211 = v184 * v210
153: v212 = v13 * v205
154: v213 = v212 - v211
155: v214 = v213 - v48
156: Eq: v214 = rhs(11)

157: v215 = v11 - v15
158: CSE: v215 (8)

159: v217 = n216 / v3
160: v219 = v217 + n218
161: v221 = n220 / v219
162: v222 = v215 * v2
163: v223 = v11 * v221
164: v224 = v223 - v222
165: v225 = v224 - v22
166: Eq: v225 = rhs(12)

167: v227 = n226 * v3
168: v228 = exp(v227)
169: v230 = n229 * v228
170: v232 = n231 * v3
171: v233 = exp(v232)
172: v235 = n234 * v233
173: v236 = v235 + v230
174: v238 = n237 * v2
175: v239 = exp(v238)
176: v241 = n240 * v239
177: v242 = v215 * v241
178: v243 = v11 * v236
179: v244 = v243 - v242
180: v245 = v244 - v48
181: Eq: v245 = rhs(13)

182: v246 = v12 - v15
183: CSE: v246 (9)

184: v248 = n247 / v4
185: v250 = v248 + n249
186: v252 = n251 / v250
187: v253 = v246 * v3
188: v254 = v12 * v252
189: v255 = v254 - v253
190: v256 = v255 - v22
191: Eq: v256 = rhs(14)

192: v258 = n257 * v4
193: v259 = exp(v258)
194: v261 = n260 * v259
195: v263 = n262 * v4
196: v264 = exp(v263)
197: v266 = n265 * v264
198: v267 = v266 + v261
199: v269 = n268 * v3
200: v270 = exp(v269)
201: v272 = n271 * v270
202: v273 = v246 * v272
203: v274 = v12 * v267
204: v275 = v274 - v273
205: v276 = v275 - v48
206: Eq: v276 = rhs(15)

Type 1 common subexpressions:
Type 2 common subexpressions:
21
22
48
54
87
120
151
184
215
246
Type 3 common subexpressions:
44
0: [ 0.0001, 1]
1: [ 0.0001, 1]
2: [ 0.0001, 1]
3: [ 0.0001, 1]
4: [ 0.0001, 1]
5: [ 0.0001, 1]
6: [ 0.0001, 1]
7: [ 0.0001, 1]
8: [ 2, 4]
9: [ 2, 4]
10: [ 2, 4]
11: [ 2, 4]
12: [ 2, 4]
13: [ 2, 4]
14: [ 2, 4]
15: [ 0, 1.12]
Last value: [ 0, 0]
###############################################
Bratu 
0: [ -0.724662, 9.88901]
1: [ -1.44982, 10]
2: [ -2.1673, 10]
3: [ -2.86903, 10]
4: [ -3.54719, 10]
5: [ -4.19424, 10]
6: [ -4.80309, 10]
7: [ -5.36719, 10]
8: [ -5.88062, 10]
9: [ -6.33817, 10]
10: [ -6.73538, 10]
11: [ -7.06853, 10]
12: [ -7.33466, 10]
13: [ -7.53146, 10]
14: [ -7.65723, 10]
15: [ -7.71082, 10]
16: [ -7.69144, 10]
17: [ -7.59866, 10]
18: [ -7.43226, 10]
19: [ -7.19223, 10]
20: [ -6.87868, 10]
21: [ -6.49188, 10]
22: [ -6.03234, 10]
23: [ -5.50087, 10]
24: [ -4.89877, 10]
25: [ -4.228, 10]
26: [ -3.49144, 9.98769]
27: [ -2.69327, 9.917]
28: [ -1.83931, 9.83659]
29: [ -0.937753, 9.75303]
###############################################
Bratu solutions revise

Testing solution 1 of 2
0: [ 0.0170378, 0.017361]
1: [ 0.0330172, 0.0336632]
2: [ 0.0479314, 0.0488787]
3: [ 0.0617644, 0.0629912]
4: [ 0.0745009, 0.075985]
5: [ 0.0861267, 0.0878457]
6: [ 0.0966287, 0.0985599]
7: [ 0.105995, 0.108115]
8: [ 0.114215, 0.116501]
9: [ 0.121278, 0.123707]
10: [ 0.127177, 0.129726]
11: [ 0.131905, 0.134549]
12: [ 0.135456, 0.138171]
13: [ 0.137825, 0.140589]
14: [ 0.139011, 0.141798]
15: [ 0.139011, 0.141798]
16: [ 0.137825, 0.140589]
17: [ 0.135456, 0.138171]
18: [ 0.131905, 0.134549]
19: [ 0.127177, 0.129726]
20: [ 0.121278, 0.123707]
21: [ 0.114215, 0.116501]
22: [ 0.105995, 0.108115]
23: [ 0.0966286, 0.09856]
24: [ 0.0861265, 0.0878458]
25: [ 0.0745006, 0.0759853]
26: [ 0.0617638, 0.0629918]
27: [ 0.0479301, 0.04888]
28: [ 0.0330146, 0.0336658]
29: [ 0.0170326, 0.0173662]

Testing solution 2 of 2
0: [ 0.345341, 0.352305]
1: [ 0.689213, 0.70313]
2: [ 1.03102, 1.05185]
3: [ 1.36991, 1.39758]
4: [ 1.70469, 1.73912]
5: [ 2.0337, 2.07479]
6: [ 2.35468, 2.40225]
7: [ 2.66454, 2.71837]
8: [ 2.95921, 3.01899]
9: [ 3.23341, 3.29873]
10: [ 3.48061, 3.55093]
11: [ 3.69315, 3.76776]
12: [ 3.86274, 3.94077]
13: [ 3.98134, 4.06177]
14: [ 4.04248, 4.12414]
15: [ 4.04248, 4.12414]
16: [ 3.98134, 4.06177]
17: [ 3.86274, 3.94077]
18: [ 3.69315, 3.76776]
19: [ 3.48061, 3.55093]
20: [ 3.23341, 3.29873]
21: [ 2.95921, 3.01899]
22: [ 2.66454, 2.71837]
23: [ 2.35468, 2.40225]
24: [ 2.0337, 2.07479]
25: [ 1.70469, 1.73912]
26: [ 1.36991, 1.39758]
27: [ 1.03102, 1.05184]
28: [ 0.689215, 0.703127]
29: [ 0.34534, 0.352307]
###############################################
Bratu solutions revise2

Testing solution 1 of 2
0: [ 0.0170378, 0.017361]
1: [ 0.0330172, 0.0336632]
2: [ 0.0479314, 0.0488787]
3: [ 0.0617644, 0.0629912]
4: [ 0.0745009, 0.075985]
5: [ 0.0861267, 0.0878457]
6: [ 0.0966287, 0.0985599]
7: [ 0.105995, 0.108115]
8: [ 0.114215, 0.116501]
9: [ 0.121278, 0.123707]
10: [ 0.127177, 0.129726]
11: [ 0.131905, 0.134549]
12: [ 0.135456, 0.138171]
13: [ 0.137825, 0.140589]
14: [ 0.139011, 0.141798]
15: [ 0.139011, 0.141798]
16: [ 0.137825, 0.140589]
17: [ 0.135456, 0.138171]
18: [ 0.131905, 0.134549]
19: [ 0.127177, 0.129726]
20: [ 0.121278, 0.123707]
21: [ 0.114215, 0.116501]
22: [ 0.105995, 0.108115]
23: [ 0.0966286, 0.09856]
24: [ 0.0861265, 0.0878458]
25: [ 0.0745006, 0.0759853]
26: [ 0.0617638, 0.0629918]
27: [ 0.0479301, 0.04888]
28: [ 0.0330146, 0.0336658]
29: [ 0.0170326, 0.0173662]

Testing solution 2 of 2
0: [ 0.345341, 0.352305]
1: [ 0.689213, 0.70313]
2: [ 1.03102, 1.05185]
3: [ 1.36991, 1.39758]
4: [ 1.70469, 1.73912]
5: [ 2.0337, 2.07479]
6: [ 2.35468, 2.40225]
7: [ 2.66454, 2.71837]
8: [ 2.95921, 3.01899]
9: [ 3.23341, 3.29873]
10: [ 3.48061, 3.55093]
11: [ 3.69315, 3.76776]
12: [ 3.86274, 3.94077]
13: [ 3.98134, 4.06177]
14: [ 4.04248, 4.12414]
15: [ 4.04248, 4.12414]
16: [ 3.98134, 4.06177]
17: [ 3.86274, 3.94077]
18: [ 3.69315, 3.76776]
19: [ 3.48061, 3.55093]
20: [ 3.23341, 3.29873]
21: [ 2.95921, 3.01899]
22: [ 2.66454, 2.71837]
23: [ 2.35468, 2.40225]
24: [ 2.0337, 2.07479]
25: [ 1.70469, 1.73912]
26: [ 1.36991, 1.39758]
27: [ 1.03102, 1.05184]
28: [ 0.689215, 0.703127]
29: [ 0.34534, 0.352307]
###############################################
Jacobsen solutions revise_all

Testing solution 1 of 5
0: [ 0.985769, 1]
1: [ 0.976454, 0.99618]
2: [ 0.948652, 0.967817]
3: [ 0.872114, 0.889733]
4: [ 0.700981, 0.715143]
5: [ 0.539792, 0.550696]
6: [ 0.312648, 0.318964]
7: [ 0.130898, 0.133543]
8: [ 3.40583, 3.42491]
9: [ 3.38074, 3.44903]
10: [ 3.37297, 3.44111]
11: [ 3.3511, 3.4188]
12: [ 3.29732, 3.36393]
13: [ 3.22672, 3.29191]
14: [ 3.1064, 3.16916]
15: [ 0.422567, 0.426941]

Testing solution 2 of 5
0: [ 0.194826, 0.198762]
1: [ 0.102842, 0.10492]
2: [ 0.0775787, 0.0791459]
3: [ 0.0710779, 0.0725138]
4: [ 0.069433, 0.0708357]
5: [ 0.0200653, 0.0204706]
6: [ 0.00560125, 0.0057144]
7: [ 0.00155549, 0.00158692]
8: [ 3.10109, 3.13013]
9: [ 3.01475, 3.07565]
10: [ 3.00489, 3.0656]
11: [ 3.00362, 3.0643]
12: [ 3.0034, 3.06408]
13: [ 2.96566, 3.02558]
14: [ 2.96837, 3.02834]
15: [ 1.06798, 1.08238]

Testing solution 3 of 5
0: [ 0.977298, 0.997042]
1: [ 0.950576, 0.969779]
2: [ 0.877841, 0.895575]
3: [ 0.715221, 0.72967]
4: [ 0.470475, 0.479979]
5: [ 0.251603, 0.256686]
6: [ 0.102777, 0.104853]
7: [ 0.0351496, 0.0358597]
8: [ 3.45788, 3.48232]
9: [ 3.42785, 3.4971]
10: [ 3.40678, 3.4756]
11: [ 3.35541, 3.42319]
12: [ 3.25309, 3.31881]
13: [ 3.11424, 3.17715]
14: [ 3.00125, 3.06189]
15: [ 0.481705, 0.485166]

Testing solution 4 of 5
0: [ 0.987623, 1]
1: [ 0.982149, 1]
2: [ 0.964874, 0.984366]
3: [ 0.913134, 0.931582]
4: [ 0.779604, 0.795354]
5: [ 0.703442, 0.717653]
6: [ 0.533385, 0.541609]
7: [ 0.289828, 0.295683]
8: [ 3.27743, 3.2925]
9: [ 3.25345, 3.31918]
10: [ 3.24883, 3.31446]
11: [ 3.2348, 3.30015]
12: [ 3.19647, 3.26105]
13: [ 3.15854, 3.22234]
14: [ 3.09941, 3.16202]
15: [ 0.290379, 0.296245]

Testing solution 5 of 5
0: [ 0.925171, 0.943862]
1: [ 0.810671, 0.827049]
2: [ 0.596595, 0.608647]
3: [ 0.352113, 0.359226]
4: [ 0.190165, 0.194007]
5: [ 0.073759, 0.0752491]
6: [ 0.0253839, 0.0258967]
7: [ 0.00811798, 0.00828198]
8: [ 3.44153, 3.46257]
9: [ 3.38339, 3.45174]
10: [ 3.30796, 3.37478]
11: [ 3.18122, 3.24549]
12: [ 3.06655, 3.1285]
13: [ 2.98174, 3.04198]
14: [ 2.96753, 3.02748]
15: [ 0.504172, 0.50733]
###############################################
Jacobsen solutions with iterative revision

Testing solution 1 of 5
0: [ 0.985769, 1]
1: [ 0.976454, 0.99618]
2: [ 0.948652, 0.967817]
3: [ 0.872114, 0.889733]
4: [ 0.700981, 0.715143]
5: [ 0.539792, 0.550696]
6: [ 0.313173, 0.318473]
7: [ 0.130898, 0.133543]
8: [ 3.4086, 3.42294]
9: [ 3.39985, 3.43318]
10: [ 3.38912, 3.42528]
11: [ 3.36711, 3.40311]
12: [ 3.3106, 3.35093]
13: [ 3.2398, 3.27909]
14: [ 3.12017, 3.15565]
15: [ 0.422938, 0.426682]

Testing solution 2 of 5
0: [ 0.194826, 0.198762]
1: [ 0.102842, 0.10492]
2: [ 0.0775787, 0.0791459]
3: [ 0.0711412, 0.0724585]
4: [ 0.069433, 0.0708357]
5: [ 0.0200653, 0.0204706]
6: [ 0.00560125, 0.0057144]
7: [ 0.00155549, 0.00158692]
8: [ 3.10473, 3.12664]
9: [ 3.03491, 3.05554]
10: [ 3.02576, 3.04477]
11: [ 3.02424, 3.04372]
12: [ 3.01852, 3.049]
13: [ 2.98819, 3.00306]
14: [ 2.99194, 3.00477]
15: [ 1.06799, 1.08237]

Testing solution 3 of 5
0: [ 0.977298, 0.997042]
1: [ 0.950576, 0.969779]
2: [ 0.877841, 0.895575]
3: [ 0.715221, 0.72967]
4: [ 0.470475, 0.479979]
5: [ 0.251603, 0.256686]
6: [ 0.102795, 0.104835]
7: [ 0.0351496, 0.0358597]
8: [ 3.46111, 3.47912]
9: [ 3.44869, 3.47638]
10: [ 3.42749, 3.45499]
11: [ 3.37561, 3.40308]
12: [ 3.26905, 3.30297]
13: [ 3.13186, 3.15961]
14: [ 3.0215, 3.04168]
15: [ 0.481821, 0.485053]

Testing solution 4 of 5
0: [ 0.987623, 1]
1: [ 0.982149, 1]
2: [ 0.964874, 0.984366]
3: [ 0.913134, 0.931582]
4: [ 0.779604, 0.795354]
5: [ 0.703442, 0.717653]
6: [ 0.533443, 0.541388]
7: [ 0.289828, 0.295683]
8: [ 3.27743, 3.2925]
9: [ 3.27012, 3.30555]
10: [ 3.2626, 3.3017]
11: [ 3.24746, 3.28746]
12: [ 3.20714, 3.25038]
13: [ 3.1686, 3.21226]
14: [ 3.11036, 3.15103]
15: [ 0.290379, 0.296245]

Testing solution 5 of 5
0: [ 0.925171, 0.943862]
1: [ 0.810671, 0.827049]
2: [ 0.596595, 0.608647]
3: [ 0.352113, 0.359226]
4: [ 0.190165, 0.194007]
5: [ 0.073759, 0.0752491]
6: [ 0.0253839, 0.0258967]
7: [ 0.00811798, 0.00828198]
8: [ 3.44373, 3.46038]
9: [ 3.40627, 3.42893]
10: [ 3.33003, 3.35277]
11: [ 3.20214, 3.22463]
12: [ 3.08327, 3.11186]
13: [ 3.00506, 3.01869]
14: [ 2.99352, 3.00149]
15: [ 0.504202, 0.507301]
###############################################
Jacobsen solutions probing

Testing solution 1 of 5
0: [ 0.989035, 1]
1: [ 0.979049, 0.993692]
2: [ 0.948652, 0.967817]
3: [ 0.872114, 0.889733]
4: [ 0.700981, 0.715143]
5: [ 0.541191, 0.54935]
6: [ 0.313285, 0.318334]
7: [ 0.130898, 0.133543]
8: [ 3.41105, 3.42169]
9: [ 3.40419, 3.42722]
10: [ 3.39502, 3.4193]
11: [ 3.36958, 3.4007]
12: [ 3.31534, 3.34625]
13: [ 3.24347, 3.27556]
14: [ 3.12645, 3.14934]
15: [ 0.422938, 0.42622]

Testing solution 2 of 5
0: [ 0.195168, 0.198762]
1: [ 0.103099, 0.1048]
2: [ 0.0779978, 0.078769]
3: [ 0.0713556, 0.0722621]
4: [ 0.0696898, 0.0706015]
5: [ 0.0200653, 0.0204706]
6: [ 0.00560125, 0.0057144]
7: [ 0.00155549, 0.00158692]
8: [ 3.11217, 3.11846]
9: [ 3.03767, 3.05281]
10: [ 3.0282, 3.04224]
11: [ 3.02647, 3.04148]
12: [ 3.02617, 3.04134]
13: [ 2.98899, 3.00193]
14: [ 2.99393, 3.00272]
15: [ 1.06799, 1.08107]

Testing solution 3 of 5
0: [ 0.98143, 0.992901]
1: [ 0.95388, 0.966459]
2: [ 0.877841, 0.895575]
3: [ 0.715221, 0.72967]
4: [ 0.470475, 0.479979]
5: [ 0.251745, 0.256545]
6: [ 0.102818, 0.104811]
7: [ 0.0351496, 0.0358597]
8: [ 3.46482, 3.47544]
9: [ 3.45384, 3.47113]
10: [ 3.43217, 3.45023]
11: [ 3.37679, 3.40189]
12: [ 3.27343, 3.29854]
13: [ 3.13323, 3.15823]
14: [ 3.02463, 3.03853]
15: [ 0.482409, 0.484447]

Testing solution 4 of 5
0: [ 0.990497, 1]
1: [ 0.984574, 0.999711]
2: [ 0.964874, 0.984366]
3: [ 0.913134, 0.931582]
4: [ 0.779604, 0.795354]
5: [ 0.705705, 0.715379]
6: [ 0.534006, 0.540817]
7: [ 0.289828, 0.295683]
8: [ 3.27958, 3.2925]
9: [ 3.27421, 3.29914]
10: [ 3.26804, 3.29524]
11: [ 3.25052, 3.28433]
12: [ 3.21195, 3.2457]
13: [ 3.17304, 3.20776]
14: [ 3.11775, 3.14377]
15: [ 0.290379, 0.296245]

Testing solution 5 of 5
0: [ 0.929138, 0.93973]
1: [ 0.812718, 0.824991]
2: [ 0.596595, 0.608647]
3: [ 0.352113, 0.359226]
4: [ 0.190165, 0.194007]
5: [ 0.073759, 0.0752491]
6: [ 0.0253839, 0.0258967]
7: [ 0.00811798, 0.00828198]
8: [ 3.44843, 3.45563]
9: [ 3.41071, 3.42442]
10: [ 3.33363, 3.34909]
11: [ 3.20279, 3.22396]
12: [ 3.08874, 3.10633]
13: [ 3.00564, 3.0181]
14: [ 2.99471, 3.0003]
15: [ 0.504858, 0.506651]
