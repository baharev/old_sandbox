#################### DESCRIPTION ###############################################
#
# Last updated: 21 Aug 2009
#
# The homoazeo40.mod has three solutions corresponding to the lower 
# concentration steady state (LSS), upper stable steady state or higher steady 
# state (HSS), and unstable steady state (USS). The distillate molar flow rate, 
# denoted by D, can be chosen as bifurcation parameter.
# The homoazeo20.mod has a single solution, and also differs from 
# homoazeo40.mod in the number of theoretical stages and in the 
# feed stage location, besides the bifurcation parameter value.
#
# The unstable steady state is missed by state-of-the-art methods such as 
# the inside-out algorithm or the simultaneous correction procedure, even when 
# supplied with a good initial guess obtained with case study. Bifurcation 
# diagrams were computed with continuation methods earlier, for example:
#
# Arjun Vadapalli, J. D. Seader;
# A generalized framework for computing bifurcation diagrams using process 
# simulation programs;
# Computers and Chemical Engineering 25 (2001) 445–464
#
# A. Kannan, Manish R. Joshi, G. Ramalinga Reddy, and Denish M. Shah;
# Multiple-Steady-States Identification in Homogeneous Azeotropic Distillation 
# Using a Process Simulator;
# Ind. Eng. Chem. Res., 2005, 44 (12), 4386-4399; DOI: 10.1021/ie049443s
#
# Güttinger, Dorn and Morari (see below) used the following software to compute
# the unstable steady state:
#
# Doedel, E. J.; Wang, X. AUTO94: Software for Continuation and 
# Bifurcation Problems in Ordinary Differential Equations; Computer
# Science Department of Concordia University: Montreal, Canada, 1994
#
# Except the number of stages and the feed stage location, the model and its 
# parameters correspond to the "Auto model" discussed in:
#
# Thomas E. Güttinger, Cornelius Dorn, Manfred Morari;
# Experimental Study of Multiple Steady States in Homogeneous Azeotropic
# Distillation;
# Ind. Eng. Chem. Res. 1997, 36, 794-802
#
# Solving this model with interval methods seems to be first discussed in:
#
# A. Baharev, E. Rév;
# A complete nonlinear system solver using affine arithmetic;
# Interval Analysis and Constraint Propagation for Applications (IntCP 2009);
# Workshop held in conjunction with the 15th International Conference on 
# Principles and Practice of Constraint Programming (CP 2009);
# Lisbon, Portugal, September 20th, 2009
#
# Manuscript of this talk is available from:
#
# http://reliablecomputing.eu
#
# The above interval method finds the three solutions in 9 s without any user 
# provided initial guesses.
#
############## PROBLEM STATISTICS ##############################################
#
# Presolve eliminates 120 constraints and 120 variables.
# Substitution eliminates 760 variables.
# Adjusted problem:
# 280 variables, all nonlinear
# 280 constraints; 1194 nonzeros
#	  240 nonlinear constraints
#	  40 linear constraints
# 0 objectives.
#
################# PARAMETERS FROM SPECIFICATION ################################

# NUMBER OF STAGES
param N := 40;

# FEED STAGE LOCATION
param N_F := 20;

# NUMBER OF COMPONENTS
param C := 3;

# DISTILLATE MOLAR FLOW RATE
param D;

let D := 0.45;

# VAPOR FLOW RATE, FROM SPECIFICATION
param V := 1.38;

# FEED LOCATION AND VALUES ARE GIVEN IN THE DATA SECTION

param F{j in 0..N};
param f{i in 1..C, j in 0..N};

# AUXILIARY PARAMETERS

param L{j in 0..N} = V - D + sum{k in 0..j} F[k];
param B := F[N_F] - D;

################## PARAMETERS ##################################################

param a{1..C};
param b{1..C};
param c{1..C};

param r{1..C, 1..C};
param s{1..C, 1..C};

param P := 100000.0;

# LOWER/UPPER BOUNDS ON THE VARIABLES, INITIAL ESTIMATES (IF NEEDED)
# VALUES ARE GIVEN IN THE DATA SECTION

param x_L{1..C, 1..N}; param x_U{1..C, 1..N}; param x_0{1..C, 1..N};
param K_L{1..C, 1..N}; param K_U{1..C, 1..N}; param K_0{1..C, 1..N};

param T_0{1..N};

############### VARIABLES ######################################################

var x{i in 1..C, j in 1..N} >= x_L[i,j], <= x_U[i,j], := x_0[i,j];

var K{i in 1..C, j in 1..N} >= K_L[i,j], <= K_U[i,j], := K_0[i,j];

var T{j in 1..N} >= 336.3, <= 383.4, := T_0[j];

####### DEFINED VARIABLES (THEY ARE ELIMINATED BY PRESOLVE / SUBTITUTION) ######

var p{i in 1..C, j in 1..N} = exp(a[i]+b[i]/(T[j]+c[i]));

var rcp_T{j in 1..N} = 1.0/T[j];

var Lambda{i1 in 1..C, i2 in 1..C, j in 1..N} = exp(r[i1,i2]+s[i1,i2]*rcp_T[j]);

var sum_xLambda{i in 1..C, j in 1..N} = sum{i1 in 1..C} (x[i1,j]*Lambda[i,i1,j]);

var rcp_sum_xLambda{i in 1..C, j in 1..N} = 1.0/sum_xLambda[i,j];

var gamma{i in 1..C, j in 1..N} =
  exp( -log(sum_xLambda[i,j]) + 1.0 - (sum{i2 in 1..C} (x[i2,j]*Lambda[i2,i,j]*rcp_sum_xLambda[i2,j])) );
  
############## EQUATIONS #######################################################

# AUXILIARY EQUATIONS

E_aux_K{j in 1..N, i in 1..C}:
	K[i,j] - gamma[i,j]*(p[i,j]/P) = 0.0;

# MATERIAL BALANCES

M_tot{i in 1..C}:
	D*(K[i,1]*x[i,1]) + B*x[i,N] - f[i,N_F] = 0.0;

# NOTE THE UNUSUAL FORMULATION
M_eq{j in 1..N-1, i in 1..C}:
	L[j]*x[i,j] + sum{i1 in j+1..N} f[i,i1] - B*x[i,N] - V*(K[i,j+1]*x[i,j+1]) = 0.0;

# SUMMATION EQUATIONS

S_x_eq{j in 1..N}:
	sum{i in 1..C} x[i,j] - 1.0 = 0.0;

################### DATA SECTION ###############################################

data;

let a[1] := 23.4832;
let a[2] := 20.5110;
let a[3] := 20.9064;

let b[1] := -3634.01;
let b[2] := -2664.30;
let b[3] := -3096.52;

let c[1] := -33.768;
let c[2] := -79.483;
let c[3] := -53.668;

let r[1,2] :=  0.7411;
let r[1,3] :=  0.9645;
let r[2,3] := -1.4350;

let r[2,1] := -1.0250;
let r[3,1] := -0.9645;
let r[3,2] :=  2.7470;

let r[1,1] := 0.0;
let r[2,2] := 0.0;
let r[3,3] := 0.0;

let s[1,2] := -477.00;
let s[1,3] := -903.1024;
let s[2,3] :=  768.20;

let s[2,1] :=  72.78;
let s[3,1] := -140.9995;
let s[3,2] := -1419.0;

let s[1,1] := 0.0;
let s[2,2] := 0.0;
let s[3,3] := 0.0;

# LOWER AND UPPER BOUNDS ON THE VARIABLES

for {j in 1..N} {
	let x_L[1,j] := 0.0;
	let x_U[1,j] := 0.9998;
	let x_L[2,j] := 1.0e-4;
	let x_U[2,j] := 0.9999;
	let x_L[3,j] := 1.0e-4;
	let x_U[3,j] := 0.9999;
}

# THIS BOUND SEEMS TO BE REASONABLE FROM ENGINEENERING POINT OF VIEW

let x_L[1,1] := 0.83;

# THESE BOUNDS WERE CALCULATED IN ADVANCE

for {j in 1..N} {
	let K_L[1,j] := 0.9784;
	let K_L[2,j] := 0.2445;
	let K_L[3,j] := 0.2745;
	
	let K_U[1,j] := 40.52;
	let K_U[2,j] := 1.317;
	let K_U[3,j] := 1.975;
}

# COMES FROM x_L[1,1] (K=y/x, y<1) 

let K_U[1,1] := 1.21;

# FEED FLOW RATES, LOCATION

for {i in 1..C, j in 0..N}
	let f[i,j] := 0.0;

let f[1, N_F] := 0.4098370;
let f[2, N_F] := 0.01229769;
let f[3, N_F] := 0.06090665;

for {j in 0..N}
	let F[j] := sum{i in 1..C} f[i,j];

################################################################################

# DUMB INITIAL ESTIMATES (IF NEEDED)

for {i in 1..C, j in 1..N}
	let x_0[i,j] := 0.33;
	
# for {j in 1..N} {
	# let x_0[1,j] := 0.00;
	# let x_0[2,j] := 1.00;
	# let x_0[3,j] := 0.00;
# }

for {j in 1..N}
	let T_0[j] := 337.0;

for {i in 1..C, j in 1..N}
	let K_0[i,j] := 1.0;

# for {j in N_F+1..N} {
	# let K_0[1,j] := 40.52;
# }

################################################################################

option show_stats 1;
option presolve 10;
option substout 1;
option var_bounds 2;
option nl_comments 0;
#option nl_permute 0;
#option auxfiles cfru;
#write ghomoazeo40;

# option solver ipopt;
solve;

# display x, K, T;
#
# SOLUTION 1 ###################################################################
#
# :           x           K        :=
# 1 1    0.883872      0.999153
# 1 2    0.884717      0.998769
# 1 3    0.885658      0.99835
# 1 4    0.886691      0.997903
# 1 5    0.887804      0.997436
# 1 6    0.888976      0.996965
# 1 7    0.890178      0.996506
# 1 8    0.891369      0.996082
# 1 9    0.892501      0.995719
# 1 10   0.893515      0.995443
# 1 11   0.894341      0.995288
# 1 12   0.894902      0.995286
# 1 13   0.895108      0.995479
# 1 14   0.894854      0.995917
# 1 15   0.894005      0.996671
# 1 16   0.892378      0.997847
# 1 17   0.889699      0.99962
# 1 18   0.885516      1.0023
# 1 19   0.879023      1.0065
# 1 20   0.868577      1.01357
# 1 21   0.868586      1.01356
# 1 22   0.8686        1.01356
# 1 23   0.868622      1.01355
# 1 24   0.868658      1.01353
# 1 25   0.868715      1.01351
# 1 26   0.868805      1.01347
# 1 27   0.868949      1.01341
# 1 28   0.869177      1.01331
# 1 29   0.869533      1.01316
# 1 30   0.870082      1.01294
# 1 31   0.87091       1.01263
# 1 32   0.872106      1.01221
# 1 33   0.873715      1.01175
# 1 34   0.875601      1.01145
# 1 35   0.877158      1.01185
# 1 36   0.876746      1.01415
# 1 37   0.870471      1.02098
# 1 38   0.848275      1.04012
# 1 39   0.771495      1.11417
# 1 40   0.37624       2.07569
# 2 1    0.000662582   0.583324
# 2 2    0.000978343   0.585229
# 2 3    0.00133705    0.587375
# 2 4    0.00174154    0.58976
# 2 5    0.00219404    0.592368
# 2 6    0.00269608    0.595168
# 2 7    0.00324852    0.598105
# 2 8    0.00385166    0.601105
# 2 9    0.00450566    0.604067
# 2 10   0.00521112    0.606867
# 2 11   0.00597       0.609359
# 2 12   0.00678683    0.611375
# 2 13   0.00767027    0.612725
# 2 14   0.00863536    0.613191
# 2 15   0.00970677    0.612512
# 2 16   0.0109241     0.610355
# 2 17   0.0123511     0.606254
# 2 18   0.0140943     0.599504
# 2 19   0.0163422     0.588926
# 2 20   0.0194626     0.572343
# 2 21   0.0194688     0.572365
# 2 22   0.0194787     0.572399
# 2 23   0.0194945     0.572453
# 2 24   0.01952       0.57254
# 2 25   0.0195607     0.572678
# 2 26   0.019626      0.5729
# 2 27   0.0197305     0.573254
# 2 28   0.0198976     0.573815
# 2 29   0.0201647     0.5747
# 2 30   0.020591      0.576085
# 2 31   0.02127       0.578217
# 2 32   0.0223487     0.581416
# 2 33   0.0240581     0.586018
# 2 34   0.026764      0.59217
# 2 35   0.031067      0.599332
# 2 36   0.0380431     0.605248
# 2 37   0.0499465     0.604018
# 2 38   0.0727786     0.581999
# 2 39   0.130167      0.505012
# 2 40   0.366927      0.339299
# 3 1    0.115466      1.00887
# 3 2    0.114305      1.01308
# 3 3    0.113005      1.01781
# 3 4    0.111567      1.02307
# 3 5    0.110002      1.02882
# 3 6    0.108328      1.03498
# 3 7    0.106574      1.04143
# 3 8    0.104779      1.04799
# 3 9    0.102993      1.05442
# 3 10   0.101274      1.06043
# 3 11   0.0996893     1.06567
# 3 12   0.0983116     1.06974
# 3 13   0.0972217     1.07218
# 3 14   0.0965106     1.07247
# 3 15   0.0962879     1.06998
# 3 16   0.0966975     1.06389
# 3 17   0.0979504     1.0531
# 3 18   0.100389      1.03593
# 3 19   0.104635      1.0096
# 3 20   0.11196       0.969103
# 3 21   0.111945      0.969147
# 3 22   0.111921      0.969217
# 3 23   0.111883      0.96933
# 3 24   0.111822      0.96951
# 3 25   0.111725      0.969797
# 3 26   0.111569      0.970257
# 3 27   0.11132       0.970988
# 3 28   0.110926      0.972149
# 3 29   0.110302      0.973979
# 3 30   0.109327      0.976835
# 3 31   0.10782       0.981216
# 3 32   0.105546      0.987747
# 3 33   0.102227      0.997026
# 3 34   0.0976352     1.00912
# 3 35   0.0917747     1.02233
# 3 36   0.0852113     1.03065
# 3 37   0.0795827     1.01909
# 3 38   0.0789467     0.954299
# 3 39   0.0983387     0.759493
# 3 40   0.256833      0.368115
# ;

# T [*] :=
 # 1 336.4      8 336.439   15 336.509   22 336.598   29 336.606   36 336.806
 # 2 336.404    9 336.447   16 336.521   23 336.599   30 336.61    37 336.93
 # 3 336.408   10 336.456   17 336.534   24 336.599   31 336.618   38 337.145
 # 4 336.413   11 336.466   18 336.549   25 336.599   32 336.63    39 337.686
 # 5 336.418   12 336.476   19 336.569   26 336.6     33 336.649   40 341.164
 # 6 336.424   13 336.487   20 336.598   27 336.601   34 336.68
 # 7 336.431   14 336.497   21 336.598   28 336.603   35 336.729
# ;
#
# SOLUTION 2 ###################################################################
#
# :           x            K        :=
# 1 1    0.908567       1.0024
# 1 2    0.900555       1.00969
# 1 3    0.886531       1.01957
# 1 4    0.863971       1.03525
# 1 5    0.824489       1.06639
# 1 6    0.736839       1.15713
# 1 7    0.450366       1.76201
# 1 8    0.102491       5.85898
# 1 9    0.0324429     11.283
# 1 10   0.0239378     13.3198
# 1 11   0.0214015     14.6305
# 1 12   0.0195793     15.9049
# 1 13   0.0180623     17.1727
# 1 14   0.0168047     18.397
# 1 15   0.0157768     19.5419
# 1 16   0.0149464     20.5813
# 1 17   0.0142814     21.5004
# 1 18   0.0137526     22.2945
# 1 19   0.0133343     22.9672
# 1 20   0.0130047     23.5277
# 1 21   0.000381268   34.9256
# 1 22   1.07397e-05   36.3509
# 1 23   2.95767e-07   37.1807
# 1 24   8.0004e-09    37.8542
# 1 25   2.13317e-10   38.4027
# 1 26   5.62295e-12   38.8453
# 1 27   1.46897e-13   39.1998
# 1 28   3.82356e-15   39.4818
# 1 29   1.08351e-16   39.7052
# 1 30   9.30451e-18   39.8814
# 1 31   4.22009e-18   40.0199
# 1 32   2.08183e-18   40.1286
# 1 33   4.32967e-19   40.2136
# 1 34   0             40.2801
# 1 35   0             40.3321
# 1 36   0             40.3726
# 1 37   0             40.4042
# 1 38   0             40.4288
# 1 39   0             40.448
# 1 40   0             40.4629
# 2 1    0.0400503      0.681153
# 2 2    0.0530868      0.675991
# 2 3    0.0679049      0.657856
# 2 4    0.0872625      0.62636
# 2 5    0.117539       0.576007
# 2 6    0.179685       0.490341
# 2 7    0.362557       0.358529
# 2 8    0.538279       0.47044
# 2 9    0.515498       0.720952
# 2 10   0.454784       0.783441
# 2 11   0.393696       0.801076
# 2 12   0.337091       0.813468
# 2 13   0.286387       0.82429
# 2 14   0.242158       0.833733
# 2 15   0.204428       0.841808
# 2 16   0.172831       0.84859
# 2 17   0.146768       0.8542
# 2 18   0.125532       0.858782
# 2 19   0.108399       0.862488
# 2 20   0.0946866      0.865461
# 2 21   0.0765217      1.26681
# 2 22   0.0606862      1.29087
# 2 23   0.0479111      1.29664
# 2 24   0.0376996      1.30088
# 2 25   0.0295852      1.30425
# 2 26   0.0231672      1.30693
# 2 27   0.0181096      1.30905
# 2 28   0.0141355      1.31071
# 2 29   0.0110199      1.31202
# 2 30   0.00858166     1.31305
# 2 31   0.00667619     1.31385
# 2 32   0.0051887      1.31448
# 2 33   0.00402848     1.31497
# 2 34   0.00312413     1.31535
# 2 35   0.00241959     1.31565
# 2 36   0.00187093     1.31588
# 2 37   0.0014438      1.31606
# 2 38   0.00111136     1.3162
# 2 39   0.000852663    1.31631
# 2 40   0.000651385    1.3164
# 3 1    0.0513825      1.20607
# 3 2    0.0463578      1.18287
# 3 3    0.0455644      1.12915
# 3 4    0.0487668      1.04404
# 3 5    0.0579719      0.915486
# 3 6    0.0834766      0.710089
# 3 7    0.187077       0.40873
# 3 8    0.35923        0.407208
# 3 9    0.452059       0.580229
# 3 10   0.521278       0.623192
# 3 11   0.584902       0.635156
# 3 12   0.64333        0.644119
# 3 13   0.695551       0.652369
# 3 14   0.741037       0.659817
# 3 15   0.779795       0.666332
# 3 16   0.812222       0.671887
# 3 17   0.838951       0.67653
# 3 18   0.860716       0.68035
# 3 19   0.878266       0.683455
# 3 20   0.892309       0.685954
# 3 21   0.923097       0.96387
# 3 22   0.939303       0.980803
# 3 23   0.952089       0.985061
# 3 24   0.9623         0.988212
# 3 25   0.970415       0.990724
# 3 26   0.976833       0.992721
# 3 27   0.98189        0.9943
# 3 28   0.985864       0.995545
# 3 29   0.98898        0.996523
# 3 30   0.991418       0.99729
# 3 31   0.993324       0.997891
# 3 32   0.994811       0.99836
# 3 33   0.995972       0.998726
# 3 34   0.996876       0.999012
# 3 35   0.99758        0.999234
# 3 36   0.998129       0.999408
# 3 37   0.998556       0.999543
# 3 38   0.998889       0.999648
# 3 39   0.999147       0.99973
# 3 40   0.999349       0.999794
# ;

# T [*] :=
 # 1 336.931    8 352.683   15 369.534   22 382.636   29 383.192   36 383.293
 # 2 337.064    9 364.733   16 369.818   23 382.787   30 383.219   37 383.298
 # 3 337.19    10 367.181   17 370.053   24 382.899   31 383.24    38 383.302
 # 4 337.339   11 367.867   18 370.246   25 382.987   32 383.256   39 383.304
 # 5 337.579   12 368.364   19 370.403   26 383.058   33 383.269   40 383.307
 # 6 338.143   13 368.807   20 370.528   27 383.113   34 383.279
 # 7 340.528   14 369.197   21 382.027   28 383.157   35 383.287
# ;
#
# SOLUTION 3 ###################################################################
#
# :           x            K        :=
# 1 1    0.922003       0.987794
# 1 2    0.929556       0.987927
# 1 3    0.933877       0.988806
# 1 4    0.935833       0.989851
# 1 5    0.936217       0.990853
# 1 6    0.935598       0.991785
# 1 7    0.934338       0.992676
# 1 8    0.932645       0.993567
# 1 9    0.930628       0.994496
# 1 10   0.928327       0.995495
# 1 11   0.92574        0.996603
# 1 12   0.922824       0.997862
# 1 13   0.919503       0.999329
# 1 14   0.915654       1.00109
# 1 15   0.911089       1.00325
# 1 16   0.905515       1.00603
# 1 17   0.89845        1.00976
# 1 18   0.889056       1.01508
# 1 19   0.875721       1.02331
# 1 20   0.854895       1.03772
# 1 21   0.811013       1.07935
# 1 22   0.640525       1.29648
# 1 23   0.179415       3.65556
# 1 24   0.0174644     10.5192
# 1 25   0.0013874     12.8892
# 1 26   0.00010723    13.2483
# 1 27   8.17057e-06   13.4382
# 1 28   6.12499e-07   13.6591
# 1 29   4.49889e-08   13.9404
# 1 30   3.22115e-09   14.3011
# 1 31   2.23411e-10   14.7633
# 1 32   1.49003e-11   15.3527
# 1 33   9.47763e-13   16.0977
# 1 34   5.69766e-14   17.0264
# 1 35   3.1859e-15    18.1619
# 1 36   1.35349e-16   19.5164
# 1 37   0             21.0864
# 1 38   0             22.8477
# 1 39   0             24.7553
# 1 40   0             26.7466
# 2 1    0.0127448      0.682512
# 2 2    0.016135       0.70811
# 2 3    0.0189126      0.724918
# 2 4    0.0212184      0.734359
# 2 5    0.0232028      0.738523
# 2 6    0.0249901      0.739219
# 2 7    0.0266737      0.737715
# 2 8    0.0283236      0.734802
# 2 9    0.0299947      0.730933
# 2 10   0.0317349      0.72634
# 2 11   0.0335913      0.721108
# 2 12   0.035617       0.715224
# 2 13   0.037877       0.708588
# 2 14   0.0404586      0.70102
# 2 15   0.0434853      0.692234
# 2 16   0.0471432      0.681791
# 2 17   0.051729       0.669004
# 2 18   0.0577519      0.652745
# 2 19   0.0661711      0.631034
# 2 20   0.0790441      0.600045
# 2 21   0.132629       0.564447
# 2 22   0.291902       0.444428
# 2 23   0.692855       0.422622
# 2 24   0.827085       0.85042
# 2 25   0.832625       1.00983
# 2 26   0.823357       1.02809
# 2 27   0.810569       1.0326
# 2 28   0.79461        1.03686
# 2 29   0.774872       1.04219
# 2 30   0.750611       1.04894
# 2 31   0.721069       1.05747
# 2 32   0.685593       1.06807
# 2 33   0.643799       1.08098
# 2 34   0.59577        1.09629
# 2 35   0.542216       1.11387
# 2 36   0.484523       1.13333
# 2 37   0.424639       1.15404
# 2 38   0.364808       1.17522
# 2 39   0.307224       1.19609
# 2 40   0.253724       1.21591
# 3 1    0.065252       1.23448
# 3 2    0.0543089      1.29337
# 3 3    0.0472104      1.33163
# 3 4    0.0429487      1.35238
# 3 5    0.0405805      1.36053
# 3 6    0.0394118      1.36038
# 3 7    0.0389881      1.35496
# 3 8    0.0390309      1.34616
# 3 9    0.0393774      1.33505
# 3 10   0.0399378      1.32216
# 3 11   0.040669       1.30767
# 3 12   0.041559       1.29153
# 3 13   0.0426198      1.27345
# 3 14   0.0438872      1.25297
# 3 15   0.0454253      1.22934
# 3 16   0.0473421      1.20146
# 3 17   0.0498208      1.16762
# 3 18   0.0531916      1.12503
# 3 19   0.0581081      1.06893
# 3 20   0.0660608      0.990405
# 3 21   0.0563582      0.88318
# 3 22   0.0675727      0.58958
# 3 23   0.12773        0.401804
# 3 24   0.155451       0.726405
# 3 25   0.165988       0.851295
# 3 26   0.176536       0.861548
# 3 27   0.189423       0.859951
# 3 28   0.20539        0.857348
# 3 29   0.225128       0.8548
# 3 30   0.249389       0.852685
# 3 31   0.278931       0.851437
# 3 32   0.314407       0.851574
# 3 33   0.356201       0.853638
# 3 34   0.40423        0.85808
# 3 35   0.457784       0.865125
# 3 36   0.515477       0.874678
# 3 37   0.575361       0.886316
# 3 38   0.635192       0.899364
# 3 39   0.692776       0.91304
# 3 40   0.746276       0.926593
# ;

# T [*] :=
 # 1 336.626    8 336.916   15 336.991   22 339.2     29 376.451   36 378.55
 # 2 336.713    9 336.926   16 337.011   23 348.887   30 376.594   37 379.067
 # 3 336.782   10 336.935   17 337.036   24 370.105   31 376.778   38 379.606
 # 4 336.832   11 336.944   18 337.073   25 375.587   32 377.011   39 380.144
 # 5 336.865   12 336.953   19 337.128   26 376.143   33 377.303   40 380.661
 # 6 336.888   13 336.964   20 337.223   27 376.25    34 377.657
 # 7 336.904   14 336.976   21 337.715   28 376.339   35 378.075
# ;
#
# END OF FILE
